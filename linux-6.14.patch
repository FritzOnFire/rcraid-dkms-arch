diff --git a/rc_init.c b/rc_init.c
index f57406d..d912eb3 100644
--- a/rc_init.c
+++ b/rc_init.c
@@ -174,7 +174,11 @@ void        rc_timeout_done(unsigned long data);
 #else
 void        rc_timeout_done(struct timer_list * t);
 #endif
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 14, 0)
 static int  rc_slave_cfg(struct scsi_device *sdev);
+#else
+static int  rc_slave_cfg(struct scsi_device *sdev, struct queue_limits *qlimits);
+#endif
 int         rc_bios_params(struct scsi_device *sdev, struct block_device *bdev,
 			   sector_t capacity, int geom[]);
 
@@ -350,7 +354,11 @@ static Scsi_Host_Template driver_template = {
 #if LINUX_VERSION_CODE < KERNEL_VERSION(5, 0, 0)
 	.use_clustering =          ENABLE_CLUSTERING,
 #endif
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 14, 0)
 	.slave_configure =         rc_slave_cfg,
+#else
+	.sdev_configure =          rc_slave_cfg,
+#endif
 	.cmd_size =                sizeof(rc_pcmd_t),
 };
 
@@ -1951,7 +1959,11 @@ rc_bios_params (struct scsi_device *sdev,
  *  A queue depth of one automatically disables tagged queueing.
  */
 static int
+#if LINUX_VERSION_CODE < KERNEL_VERSION(6, 14, 0)
 rc_slave_cfg(struct scsi_device *sdev)
+#else
+rc_slave_cfg(struct scsi_device *sdev, struct queue_limits *qlimits)
+#endif
 {
 #if LINUX_VERSION_CODE < KERNEL_VERSION(3, 10, 0)
 	if (sdev->tagged_supported)
